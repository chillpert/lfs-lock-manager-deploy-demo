name: LFSLockManger-Updater

on:
  push:
    branches:
      - main

jobs:
  download-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest release info
        id: get-release
        run: |
          owner="chillpert"
          repo="lfs-lock-manager"
          release=$(curl -s "https://api.github.com/repos/$owner/$repo/releases/latest" | grep -oP '"tag_name": "\K(.*)(?=")')
          echo "::set-output name=release::$release"

      - name: Compare versions
        id: compare
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          current_file_name=$(find . -name 'LfsLockManager_v*' -exec basename {} \;)
          current_version=$(echo $current_file_name | grep -Eo '[+-]?[0-9]+([.][0-9]+)?')
          new_version="$(echo ${{ steps.get-release.outputs.release }} | grep -Eo '[+-]?[0-9]+([.][0-9]+)?')
          echo "$current_version == $new_version"
          if [[ "$new_version" == "${{ steps.get-release.outputs.release }}" ]]; then
            echo "::set-output name=isMatched::true"
            echo "Version is same"
            echo "::set-output name=my_variable::true"
          else
            echo "::set-output name=isMatched::false"
            echo "Version is different"
          fi

          echo "::set-output name=isMatched::false"

      - name: Download release
        if: steps.compare.outputs.my_variable != 'true'
        run: |
          owner="chillpert"
          repo="lfs-lock-manager"
          release="${{ steps.get-release.outputs.release }}"
          asset_url="https://github.com/$owner/$repo/releases/download/$release/LfsLockManager_Windows.zip"
          curl -L -o asset.zip "$asset_url"
          unzip asset.zip
          mv LfsLockManager.exe LfsLockManager_${{ steps.get-release.outputs.release }}.exe

      - name: Configure Git
        if: steps.compare.outputs.my_variable != 'true'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Commit changes
        if: steps.compare.outputs.my_variable != 'true'
        run: |
          ls -a
          # git add LfsLockManager.exe
          git add LfsLockManager_${{ steps.get-release.outputs.release }}.exe
          git commit -m "Update LFS lock manager to latest"
          git push
