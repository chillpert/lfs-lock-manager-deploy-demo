name: LFSLockManger-Updater

on:
  push:
    branches:
      - main

jobs:
  download-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest release info
        id: get-release
        run: |
          owner="chillpert"
          repo="lfs-lock-manager"
          release=$(curl -s "https://api.github.com/repos/$owner/$repo/releases/latest" | grep -oP '"tag_name": "\K(.*)(?=")')
          echo "::set-output name=release::$release"

      - name: Compare versions
        id: compare
        run: |
          old_file=$(find . -name 'LfsLockManager_v*' -exec basename {} \;)

          if [[ -z $old_file ]]; then
            echo "No lock manager executable exists. Downloading initial one."
            echo "::set-output name=isMatched::false"
          else
            echo "Local lock manager found: '$old_file'"

            current_version=$(echo $old_file | grep -Eo '[+-]?[0-9]+([.][0-9]+)?')
            echo "Current version: '$current_version'"

            new_version=$(echo ${{ steps.get-release.outputs.release }} | grep -Eo '[+-]?[0-9]+([.][0-9]+)?')
            echo "New version: '$new_version'"

            echo "$current_version == $new_version"
            if (( $(echo "$new_version > $current_version" |bc -l) )); then
              echo "::set-output name=isMatched::true"
              echo "Nothing to do"
            else
              echo "::set-output name=isMatched::false"
              echo "Continue with download of new version ..."
            fi
          fi

      - name: Download release
        if: steps.compare.outputs.my_variable != 'true'
        run: |
          owner="chillpert"
          repo="lfs-lock-manager"
          release="${{ steps.get-release.outputs.release }}"
          asset_url="https://github.com/$owner/$repo/releases/download/$release/LfsLockManager_Windows.zip"
          curl -L -o asset.zip "$asset_url"
          unzip asset.zip
          mv LfsLockManager.exe LfsLockManager_${{ steps.get-release.outputs.release }}.exe

      - name: Configure Git
        if: steps.compare.outputs.my_variable != 'true'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Commit changes
        if: steps.compare.outputs.my_variable != 'true'
        run: |
          ls -a

          # Stage the new file
          git add LfsLockManager_${{ steps.get-release.outputs.release }}.exe

          # Delete old version if it exists
          old_file=${{ steps.compare.outputs.old_file }}
          if ! [[ -z $old_file ]]; then
            echo "Deleting old file '$old_file'"
            rm $old_file
            git add $old_file
          else
            # If no previous version existed, we also need 'settings.ini' as a starting point
            echo "Adding 'settings.ini'"
            git add settings.ini
          fi

          git commit -m "Update LFS lock manager to latest"
          git push
